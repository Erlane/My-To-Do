{"version":3,"sources":["assets/fundo.png","assets/pencil.png","assets/arrow.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Fundo","Content","Header","Title","h1","ImageHeader","img","SubContainer","Box","ContentList","form","Input","input","Button","button","props","width","background","margin","cursor","MessageError","p","BoxDate","App","state","text","list","edit","undefined","error","handleChange","bind","handleClick","ev","this","setState","target","value","preventDefault","isEdit","newList","map","item","index","concat","filter","i","src","Pencil","alt","Arrow","onSubmit","type","placeholder","onChange","onClick","handleEdit","handleDelete","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,yyHCM3C,IAAMC,EAAYC,IAAOC,IAAV,IAGKC,KAUdC,EAAUH,IAAOC,IAAV,KAoBPG,EAASJ,IAAOC,IAAV,KAONI,EAAQL,IAAOM,GAAV,KASLC,EAAcP,IAAOQ,IAAV,KAaXC,EAAeT,IAAOC,IAAV,KAQZS,EAAMV,IAAOC,IAAV,KAYHU,EAAcX,IAAOY,KAAV,KAcXC,EAAQb,IAAOc,MAAV,KAeLC,EAASf,IAAOgB,OAAV,KACD,SAAAC,GAAK,OAAKA,EAAMC,MAAQ,MAAQ,SACrB,SAAAD,GAAK,OAAKA,EAAME,WAAa,UAAY,aAS9C,SAAAF,GAAK,OAAKA,EAAMG,OAAS,IAAM,YAEpC,SAAAH,GAAK,OAAKA,EAAMI,OAAS,cAAgB,aAO/CC,EAAetB,IAAOuB,EAAV,KAiBZC,EAAUxB,IAAOC,IAAV,KAuIEwB,E,kDAjGb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,GACNC,KAAM,GACNC,UAAMC,EACNC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVP,E,yDAaDE,GACXC,KAAKC,SAAS,CACZV,KAAMQ,EAAGG,OAAOC,MAChBR,MAAO,O,kCAICI,GACXA,EAAGK,iBADY,MAEuBJ,KAAKV,MAAlCG,EAFM,EAENA,KAAMD,EAFA,EAEAA,KAAMa,EAFN,EAEMA,OAAQd,EAFd,EAEcA,KAC5B,GAAKA,EAGH,GAAIE,EAAM,CACR,IAAMa,EAAUd,EAAKe,KAAI,SAACC,EAAMC,GAAP,OACvBA,IAAUJ,EAASd,EAAOiB,KAE5BR,KAAKC,SAAS,CACZV,KAAM,GACNC,KAAMc,EACNb,MAAM,EACNE,MAAO,UAGTK,KAAKC,SAAS,CACZV,KAAM,GACNI,MAAO,GACPH,KAAM,GAAGkB,OAAOlB,EAAMD,UAhB1BS,KAAKC,SAAS,CAACN,MAAO,2B,iCAsBfa,EAAMC,GACfT,KAAKC,SAAS,CAACV,KAAMiB,EAAMf,MAAM,EAAMY,OAAQI,M,mCAGpCD,GACX,IAAMhB,EAAOQ,KAAKV,MAAME,KAAKmB,QAAO,SAACC,EAAGH,GAAJ,OAAcA,IAAUD,KAC1DR,KAAKC,SAAS,CAACT,W,+BAGT,IAAD,OACP,OACE,kBAAC7B,EAAD,KACE,kBAACI,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,qBACA,kBAACE,EAAD,CAAa0C,IAAKC,IAAQC,IAAI,YAEhC,kBAAC1C,EAAD,KACE,yBAAKwC,IAAKG,IAAOD,IAAI,WAEvB,kBAACzC,EAAD,KACE,kBAACC,EAAD,CAAa0C,SAAUjB,KAAKF,aAC1B,kBAACrB,EAAD,CACEyC,KAAK,OACLC,YAAY,+BACZhB,MAAOH,KAAKV,MAAMC,KAClB6B,SAAUpB,KAAKJ,eAEjB,kBAACjB,EAAD,CAAQG,OAAK,EAACE,QAAM,GACjBgB,KAAKV,MAAMG,KAAO,SAAW,WAGlC,kBAACP,EAAD,KAAec,KAAKV,MAAMK,OAC1B,kBAACP,EAAD,KACE,4BACGY,KAAKV,MAAME,KAAKe,KAAI,SAAChB,EAAMkB,GAAP,OACrB,4BAAKlB,EACH,kBAACZ,EAAD,CAAQM,OAAQ,EAAKK,MAAMG,MAASgB,IAAU,EAAKnB,MAAMe,OACvDtB,WAAY,EAAKO,MAAMG,MAASgB,IAAU,EAAKnB,MAAMe,OACrDgB,QAAS,kBAAM,EAAKC,WAAW/B,EAAMkB,KAFvC,WAGA,kBAAC9B,EAAD,CAAQ0C,QAAS,kBAAM,EAAKE,aAAad,KAAzC,wB,GAvFAe,aCnLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACL+C,QAAQ/C,MAAMA,EAAMgD,c","file":"static/js/main.bb500c29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fundo.67ec4847.png\";","module.exports = __webpack_public_path__ + \"static/media/pencil.dd0fc38c.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow.b17c864b.png\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Fundo from './assets/fundo.png';\nimport Pencil from './assets/pencil.png';\nimport Arrow from './assets/arrow.png';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: url(${Fundo});\n  background-repeat: no-repeat;\n  display: flex;\n  justify-content: center;\n\n  @media(max-width: 648px){\n    background: none;\n  }\n`;\n\nconst Content = styled.div`\n  width: 50%;\n  height: 95vh;\n  border-width: 6px 4px 6px 6px;\n  border-style: double;\n  border-color: purple;\n  box-shadow: 2px 2px 4px 2px purple;\n  margin: 1rem 0 0;\n  display: flex;\n  flex-direction: column;\n\n  @media(max-width: 768px){\n    width: 60%;\n  }\n\n  @media(max-width: 648px){\n    width: 95%;\n  }\n`;\n\nconst Header = styled.div`\n\tdisplay: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2.5rem 0 1.3rem 0;\n`;\n\nconst Title = styled.h1`\n  color: purple;\n\tfont-size: 3rem;\n  font-family: 'Lobster', cursive;\n  letter-spacing: 5px;\n  text-decoration-line: overline;\n  text-decoration-line: overline underline;\n`;\n\nconst ImageHeader = styled.img`\n  width: 12%;\n  padding-left: 1rem;\n\n  @media(max-width: 768px){\n    width: 20%;\n  }\n\n  @media(max-width: 648px){\n    display: none;\n  }\n`;\n\nconst SubContainer = styled.div`\n  text-align: center;\n\n  img {\n    width: 70%;\n  }\n`;\n\nconst Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 2rem;\n\n  @media(max-width: 375px){\n    padding-top: 0;\n  }\n`;\n\nconst ContentList = styled.form`\n  width: 100%;\n  display: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tjustify-content: space-evenly;\n\n  @media(max-width: 375px){\n    height: 20vh;\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nconst Input = styled.input`\n  width: 60%;\n  border: 2px solid purple;\n  border-radius: 25px;\n  box-shadow: 0 2px 0 hsl(269, 1%, 29%);\n  font-size: 0.9rem;\n  font-style: italic;\n  padding: 0.5rem 0 0.5rem 0.8rem;\n  outline: none;\n\n  @media(max-width: 375px){\n    width: 80%;\n  }\n`;\n\nconst Button = styled.button`\n  width: ${props => (props.width ? '25%' : '20%')};\n  background-color: ${props => (props.background ? '#585858' : '#E6E6E6')};\n  border: 2px solid #3e3c55;\n  border-radius: 25px;\n  box-shadow: 0 2px 0 #9C27B0(198, 1%, 29%);\n  color: #151515;\n  font-size: 1rem;\n  font-style: italic;\n  font-weight: bold;\n  padding: 0.5rem 0;\n  margin-left: ${props => (props.margin ? '0' : '1.2rem')};\n  outline: none;\n  cursor: ${props => (props.cursor ? 'not-allowed' : 'pointer')};\n\n  @media(max-width: 375px){\n    width: 35%;\n  }\n`;\n\nconst MessageError = styled.p`\n  color: red;\n  font-size: 1rem;\n  padding: 0.3rem 3.5rem 0;\n  align-self: flex-end;\n\n    \n  @media(max-width: 768px){\n    padding: 0.3rem 2rem 0;\n  }\n\n  @media(max-width: 375px){\n    align-self: center;\n    padding: 0 2rem 0;\n  }\n`;\n\nconst BoxDate = styled.div`\n  width: 100%;\n  height: 40vh;\n  margin-top: 1.5rem;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #bc77b9;\n  }\n\n  @media(max-width: 768px){\n    height: 37vh;\n  }\n\n  @media(max-width: 375px){\n    width: 95%;\n    padding-top: 1rem;\n  }\n\n  ul {\n    width: 100%;\n    color: #c2362e;\n    font-size: 1.5rem;\n    list-style: none;\n  }\n\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 0.5rem;\n  }\n`;\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      text: '',\n      list: [],\n      edit: undefined,\n      error: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(ev) {\n    this.setState({\n      text: ev.target.value,\n      error: ''\n    });\n  }\n\n  handleClick(ev) {\n   ev.preventDefault();\n    const { edit, list, isEdit, text } = this.state;\n    if (!text) {\n      this.setState({error: 'Ops, digite algo! :)'});\n    } else {\n      if (edit) {\n        const newList = list.map((item, index) => (\n          index === isEdit ? text : item\n        ))\n        this.setState({\n          text: '',\n          list: newList,\n          edit: false,\n          error: '',\n        })\n      } else {\n        this.setState({\n          text: '',\n          error: '',\n          list: [].concat(list, text)\n        });\n      }\n    }\n  }\n\n  handleEdit(item, index) {\n    this.setState({text: item, edit: true, isEdit: index});\n  }\n\n  handleDelete(item) {\n    const list = this.state.list.filter((i, index) => index !== item)\n      this.setState({list})\n  }\n\n  render() {\n    return (\n      <Container>\n        <Content>\n          <Header>\n            <Title>To-Do List !</Title>\n            <ImageHeader src={Pencil} alt='pencil' />\n          </Header>\n          <SubContainer>\n            <img src={Arrow} alt='arrow' />\n          </SubContainer>\n          <Box>\n            <ContentList onSubmit={this.handleClick} >\n              <Input \n                type=\"text\" \n                placeholder=\"O que vocÃª tem que fazer?\" \n                value={this.state.text}\n                onChange={this.handleChange}\n              />\n              <Button width margin>\n                {this.state.edit ? 'Salvar' : 'Enviar'}\n              </Button>\n            </ContentList>\n            <MessageError>{this.state.error}</MessageError>\n            <BoxDate>\n              <ul>\n                {this.state.list.map((text, index) => \n                <li>{text}\n                  <Button cursor={this.state.edit && (index === this.state.isEdit)} \n                    background={this.state.edit && (index === this.state.isEdit)} \n                    onClick={() => this.handleEdit(text, index)}>Editar </Button>\n                  <Button onClick={() => this.handleDelete(index)}>Deletar</Button>\n                </li>)}\n              </ul>\n            </BoxDate>\n          </Box>\n        </Content>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}